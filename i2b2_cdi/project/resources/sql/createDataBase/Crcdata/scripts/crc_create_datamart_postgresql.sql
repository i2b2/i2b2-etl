/*********************************************************
*         PostgreSQL SCRIPT TO CREATE DATA TABLES
*           Mike M	6/16/2013
**********************************************************/


-------------------------------------------------------------------------------------------
-- create ENCOUNTER_MAPPING table with clustered PK on ENCOUNTER_IDE, ENCOUNTER_IDE_SOURCE 
-------------------------------------------------------------------------------------------

CREATE TABLE ENCOUNTER_MAPPING ( 
    ENCOUNTER_IDE       	VARCHAR(200)  NOT NULL,
    ENCOUNTER_IDE_SOURCE	VARCHAR(50)  NOT NULL,
    PROJECT_ID              VARCHAR(50) NOT NULL,
    ENCOUNTER_NUM			INT NOT NULL,
    PATIENT_IDE         	VARCHAR(200) NOT NULL,
    PATIENT_IDE_SOURCE  	VARCHAR(50) NOT NULL,
    ENCOUNTER_IDE_STATUS	VARCHAR(50) NULL,
    UPLOAD_DATE         	TIMESTAMP NULL,
    UPDATE_DATE             TIMESTAMP NULL,
    DOWNLOAD_DATE       	TIMESTAMP NULL,
    IMPORT_DATE             TIMESTAMP NULL,
    SOURCESYSTEM_CD         VARCHAR(50) NULL,
    UPLOAD_ID               BIGINT NULL,
    CONSTRAINT ENCOUNTER_MAPPING_PK PRIMARY KEY(ENCOUNTER_IDE, ENCOUNTER_IDE_SOURCE, PROJECT_ID, PATIENT_IDE, PATIENT_IDE_SOURCE)
 )
;
CREATE  INDEX EM_IDX_ENCPATH ON ENCOUNTER_MAPPING(ENCOUNTER_IDE, ENCOUNTER_IDE_SOURCE, PATIENT_IDE, PATIENT_IDE_SOURCE, ENCOUNTER_NUM)
;
CREATE  INDEX EM_IDX_UPLOADID ON ENCOUNTER_MAPPING(UPLOAD_ID)
;
CREATE INDEX EM_ENCNUM_IDX ON ENCOUNTER_MAPPING(ENCOUNTER_NUM)
;


-------------------------------------------------------------------------------------
-- create PATIENT_MAPPING table with clustered PK on PATIENT_IDE, PATIENT_IDE_SOURCE
-------------------------------------------------------------------------------------

CREATE TABLE PATIENT_MAPPING ( 
    PATIENT_IDE         VARCHAR(200)  NOT NULL,
    PATIENT_IDE_SOURCE	VARCHAR(50)  NOT NULL,
    PATIENT_NUM       	INT NOT NULL,
    PATIENT_IDE_STATUS	VARCHAR(50) NULL,
    PROJECT_ID          VARCHAR(50) NOT NULL,
    UPLOAD_DATE       	TIMESTAMP NULL,
    UPDATE_DATE       	TIMESTAMP NULL,
    DOWNLOAD_DATE     	TIMESTAMP NULL,
    IMPORT_DATE         TIMESTAMP NULL,
    SOURCESYSTEM_CD   	VARCHAR(50) NULL,
    UPLOAD_ID         	BIGINT NULL,
    CONSTRAINT PATIENT_MAPPING_PK PRIMARY KEY(PATIENT_IDE, PATIENT_IDE_SOURCE, PROJECT_ID)
 )
;
CREATE  INDEX PM_IDX_UPLOADID ON PATIENT_MAPPING(UPLOAD_ID)
;
CREATE INDEX PM_PATNUM_IDX ON PATIENT_MAPPING(PATIENT_NUM)
;
CREATE INDEX PM_ENCPNUM_IDX ON 
PATIENT_MAPPING(PATIENT_IDE,PATIENT_IDE_SOURCE,PATIENT_NUM) ;


------------------------------------------------------------------------------
-- create CODE_LOOKUP table with clustered PK on TABLE_CD, COLUMN_CD, CODE_CD 
------------------------------------------------------------------------------

CREATE TABLE CODE_LOOKUP ( 
    TABLE_CD            VARCHAR(100) NOT NULL,
    COLUMN_CD           VARCHAR(100) NOT NULL,
    CODE_CD             VARCHAR(50) NOT NULL,
    NAME_CHAR           VARCHAR(650) NULL,
    LOOKUP_BLOB         TEXT NULL, 
    UPLOAD_DATE       	TIMESTAMP NULL,
    UPDATE_DATE         TIMESTAMP NULL,
    DOWNLOAD_DATE     	TIMESTAMP NULL,
    IMPORT_DATE         TIMESTAMP NULL,
    SOURCESYSTEM_CD   	VARCHAR(50) NULL,
    UPLOAD_ID         	BIGINT NULL,
	CONSTRAINT CODE_LOOKUP_PK PRIMARY KEY(TABLE_CD, COLUMN_CD, CODE_CD)
	)
;

/* add index on name_char field */
CREATE INDEX CL_IDX_NAME_CHAR ON CODE_LOOKUP(NAME_CHAR)
;
CREATE INDEX CL_IDX_UPLOADID ON CODE_LOOKUP(UPLOAD_ID)
;


--------------------------------------------------------------------
-- create CONCEPT_DIMENSION table with clustered PK on CONCEPT_PATH 
--------------------------------------------------------------------

CREATE TABLE CONCEPT_DIMENSION ( 
	CONCEPT_PATH   		VARCHAR(700) NOT NULL,
	CONCEPT_CD     		VARCHAR(50) NULL,
	NAME_CHAR      		VARCHAR(2000) NULL,
	CONCEPT_BLOB   		TEXT NULL,
	UPDATE_DATE    		TIMESTAMP NULL,
	DOWNLOAD_DATE  		TIMESTAMP NULL,
	IMPORT_DATE    		TIMESTAMP NULL,
	SOURCESYSTEM_CD		VARCHAR(50) NULL,
    UPLOAD_ID			BIGINT NULL,
    CONSTRAINT CONCEPT_DIMENSION_PK PRIMARY KEY(CONCEPT_PATH)
	)
;
CREATE INDEX CD_IDX_UPLOADID ON CONCEPT_DIMENSION(UPLOAD_ID)
;


---------------------------------------------------------------------------------------------------------------------------------------
-- create OBSERVATION_FACT table with NONclustered PK on ENCOUNTER_NUM, CONCEPT_CD, PROVIDER_ID, START_DATE, MODIFIER_CD, INSTANCE_NUM 
---------------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE OBSERVATION_FACT ( 
	ENCOUNTER_NUM  		INT NOT NULL,
	PATIENT_NUM    		INT NOT NULL,
	CONCEPT_CD     		VARCHAR(50) NOT NULL,
	PROVIDER_ID    		VARCHAR(50) NOT NULL,
	START_DATE     		TIMESTAMP NOT NULL,
	MODIFIER_CD    		VARCHAR(100) default '@' NOT NULL,
	INSTANCE_NUM		INT default (1) NOT NULL,
	VALTYPE_CD     		VARCHAR(50) NULL,
	TVAL_CHAR      		VARCHAR(255) NULL,
	NVAL_NUM       		DECIMAL(18,5) NULL,
	VALUEFLAG_CD   		VARCHAR(50) NULL,
	QUANTITY_NUM   		DECIMAL(18,5) NULL,
	UNITS_CD       		VARCHAR(50) NULL,
	END_DATE       		TIMESTAMP NULL,
	LOCATION_CD    		VARCHAR(50) NULL,
	OBSERVATION_BLOB	TEXT NULL,
	CONFIDENCE_NUM 		DECIMAL(18,5) NULL,
	UPDATE_DATE    		TIMESTAMP NULL,
	DOWNLOAD_DATE  		TIMESTAMP NULL,
	IMPORT_DATE    		TIMESTAMP NULL,
	SOURCESYSTEM_CD		VARCHAR(50) NULL, 
    UPLOAD_ID         	BIGINT NULL,
    TEXT_SEARCH_INDEX   SERIAL,
    CONSTRAINT OBSERVATION_FACT_PK PRIMARY KEY  (PATIENT_NUM, CONCEPT_CD,  MODIFIER_CD, START_DATE, ENCOUNTER_NUM, INSTANCE_NUM, PROVIDER_ID)
	)
;

/* add index on concept_cd */
CREATE  INDEX OF_IDX_ClusteredConcept ON OBSERVATION_FACT
(
	CONCEPT_CD 
)
;

/* add an index on most of the observation_fact fields */
CREATE INDEX OF_IDX_ALLObservation_Fact ON OBSERVATION_FACT
(
	PATIENT_NUM ,
	ENCOUNTER_NUM ,
	CONCEPT_CD ,
	START_DATE ,
	PROVIDER_ID ,
	MODIFIER_CD ,
	INSTANCE_NUM,
	VALTYPE_CD ,
	TVAL_CHAR ,
	NVAL_NUM ,
	VALUEFLAG_CD ,
	QUANTITY_NUM ,
	UNITS_CD ,
	END_DATE ,
	LOCATION_CD ,
	CONFIDENCE_NUM
)
;
/* add additional indexes on observation_fact fields */
CREATE INDEX OF_IDX_Start_Date ON OBSERVATION_FACT(START_DATE, PATIENT_NUM);
CREATE INDEX OF_IDX_Modifier ON OBSERVATION_FACT(MODIFIER_CD);
CREATE INDEX OF_IDX_Encounter_Patient ON OBSERVATION_FACT(ENCOUNTER_NUM, PATIENT_NUM, INSTANCE_NUM);
CREATE INDEX OF_IDX_UPLOADID ON OBSERVATION_FACT(UPLOAD_ID);
CREATE INDEX OF_IDX_SOURCESYSTEM_CD ON OBSERVATION_FACT(SOURCESYSTEM_CD);
CREATE UNIQUE INDEX OF_TEXT_SEARCH_UNIQUE ON OBSERVATION_FACT(TEXT_SEARCH_INDEX);




-------------------------------------------------------------------
-- create PATIENT_DIMENSION table with clustered PK on PATIENT_NUM 
-------------------------------------------------------------------

CREATE TABLE PATIENT_DIMENSION ( 
	PATIENT_NUM      	INT NOT NULL,
	VITAL_STATUS_CD  	VARCHAR(50) NULL,
	BIRTH_DATE       	TIMESTAMP NULL,
	DEATH_DATE       	TIMESTAMP NULL,
	SEX_CD           	VARCHAR(50) NULL,
	AGE_IN_YEARS_NUM	INT NULL,
	LANGUAGE_CD      	VARCHAR(50) NULL,
	RACE_CD          	VARCHAR(50) NULL,
	MARITAL_STATUS_CD	VARCHAR(50) NULL,
	RELIGION_CD      	VARCHAR(50) NULL,
	ZIP_CD           	VARCHAR(10) NULL,
	STATECITYZIP_PATH	VARCHAR(700) NULL,
	INCOME_CD			VARCHAR(50) NULL,
	PATIENT_BLOB     	TEXT NULL,
	UPDATE_DATE      	TIMESTAMP NULL,
	DOWNLOAD_DATE    	TIMESTAMP NULL,
	IMPORT_DATE      	TIMESTAMP NULL,
	SOURCESYSTEM_CD  	VARCHAR(50) NULL,
    UPLOAD_ID         	BIGINT NULL, 
    CONSTRAINT PATIENT_DIMENSION_PK PRIMARY KEY(PATIENT_NUM)
	)
;

/* add indexes on additional PATIENT_DIMENSION fields */
CREATE  INDEX PD_IDX_DATES ON PATIENT_DIMENSION(PATIENT_NUM, VITAL_STATUS_CD, BIRTH_DATE, DEATH_DATE)
;
CREATE  INDEX PD_IDX_AllPatientDim ON PATIENT_DIMENSION(PATIENT_NUM, VITAL_STATUS_CD, BIRTH_DATE, DEATH_DATE, SEX_CD, AGE_IN_YEARS_NUM, LANGUAGE_CD, RACE_CD, MARITAL_STATUS_CD, INCOME_CD, RELIGION_CD, ZIP_CD)
;
CREATE  INDEX PD_IDX_StateCityZip ON PATIENT_DIMENSION (STATECITYZIP_PATH, PATIENT_NUM)
;
CREATE INDEX PA_IDX_UPLOADID ON PATIENT_DIMENSION(UPLOAD_ID)
;


-----------------------------------------------------------------------------------
-- create PROVIDER_DIMENSION table with clustered PK on PROVIDER_PATH, PROVIDER_ID 
-----------------------------------------------------------------------------------

CREATE TABLE PROVIDER_DIMENSION ( 
	PROVIDER_ID    		VARCHAR(50) NOT NULL,
	PROVIDER_PATH  		VARCHAR(700) NOT NULL,
	NAME_CHAR      		VARCHAR(850) NULL,
	PROVIDER_BLOB  		TEXT NULL,
	UPDATE_DATE    		TIMESTAMP NULL,
	DOWNLOAD_DATE  		TIMESTAMP NULL,
	IMPORT_DATE    		TIMESTAMP NULL,
	SOURCESYSTEM_CD		VARCHAR(50) NULL ,
    UPLOAD_ID         	BIGINT NULL,
    CONSTRAINT PROVIDER_DIMENSION_PK PRIMARY KEY(PROVIDER_PATH, PROVIDER_ID)
	)
;

/* add index on PROVIDER_ID, NAME_CHAR */
CREATE INDEX PD_IDX_NAME_CHAR ON PROVIDER_DIMENSION(PROVIDER_ID, NAME_CHAR)
;
CREATE INDEX PD_IDX_UPLOADID ON PROVIDER_DIMENSION(UPLOAD_ID)
;


-------------------------------------------------------------------
-- create VISIT_DIMENSION table with clustered PK on ENCOUNTER_NUM 
-------------------------------------------------------------------

CREATE TABLE VISIT_DIMENSION ( 
	ENCOUNTER_NUM  		INT NOT NULL,
	PATIENT_NUM    		INT NOT NULL,
	ACTIVE_STATUS_CD	VARCHAR(50) NULL,
	START_DATE     		TIMESTAMP NULL,
	END_DATE       		TIMESTAMP NULL,
	INOUT_CD       		VARCHAR(50) NULL,
	LOCATION_CD    		VARCHAR(50) NULL,
    LOCATION_PATH  		VARCHAR(900) NULL,
	LENGTH_OF_STAY		INT NULL,
	VISIT_BLOB     		TEXT NULL,
	UPDATE_DATE    		TIMESTAMP NULL,
	DOWNLOAD_DATE  		TIMESTAMP NULL,
	IMPORT_DATE    		TIMESTAMP NULL,
	SOURCESYSTEM_CD		VARCHAR(50) NULL ,
    UPLOAD_ID         	BIGINT NULL, 
    CONSTRAINT VISIT_DIMENSION_PK PRIMARY KEY(ENCOUNTER_NUM, PATIENT_NUM)
	)
;

/* add indexes on addtional visit_dimension fields */
CREATE  INDEX VD_IDX_DATES ON VISIT_DIMENSION(ENCOUNTER_NUM, START_DATE, END_DATE)
;
CREATE  INDEX VD_IDX_AllVisitDim ON VISIT_DIMENSION(ENCOUNTER_NUM, PATIENT_NUM, INOUT_CD, LOCATION_CD, START_DATE, LENGTH_OF_STAY, END_DATE)
;
CREATE  INDEX VD_IDX_UPLOADID ON VISIT_DIMENSION(UPLOAD_ID)
;


------------------------------------------------------------
-- create MODIFIER_DIMENSION table with PK on MODIFIER_PATH 
------------------------------------------------------------

CREATE TABLE MODIFIER_DIMENSION ( 
	MODIFIER_PATH   	VARCHAR(700) NOT NULL,
	MODIFIER_CD     	VARCHAR(50) NULL,
	NAME_CHAR      		VARCHAR(2000) NULL,
	MODIFIER_BLOB   	TEXT NULL,
	UPDATE_DATE    		TIMESTAMP NULL,
	DOWNLOAD_DATE  		TIMESTAMP NULL,
	IMPORT_DATE    		TIMESTAMP NULL,
	SOURCESYSTEM_CD		VARCHAR(50) NULL,
    UPLOAD_ID			BIGINT NULL,
    CONSTRAINT MODIFIER_DIMENSION_PK PRIMARY KEY(modifier_path)
	)
;
CREATE INDEX MD_IDX_UPLOADID ON MODIFIER_DIMENSION(UPLOAD_ID);